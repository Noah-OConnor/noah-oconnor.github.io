project-name,media-src,media-data-type,media-data-src,media-alt-text,cover-media,cover-alt-text,project-description,project-info-type,project-info-value,project-link-name,project-link,project-contributions,project-section,project-section-content-1,project-section-content-2,project-section-content-3,project-section-media-1,project-section-media-2,project-section-media-3,project-section-media-caption-1,project-section-media-caption-2,project-section-media-caption-3
Lutr,/media/lutr16x9.jpg,image,/media/lutr16x9.jpg,Lutr's temporary cover art,/media/lutr16x7.jpg,Lutr's Temporary Cover Graphic,"Lutr is a fast-paced shooter where every fight is shaped by the weapons you build. Craft guns from randomized parts, take on enemies and challenges across dynamic missions, and adapt your playstyle with every new drop. Whether you're landing precise shots or unleashing raw firepower, every encounter pushes you to make the most of your gear.",Dev Tools,"Unreal Engine 5, C++, Blueprints",GitHub,https://github.com/Noah-OConnor/ProjectLutr,"Set up Unreal Gameplay Ability System (GAS) as the foundation for ability-based gunplay, supporting modular input, animation syncing, and effects",Multiplayer and Ability Framework,"One of the core technical pillars of Lutr is its use of Unreal’s Gameplay Ability System (GAS) to support clean, scalable combat mechanics. I designed the project from the start with multiplayer in mind and integrated GAS with replicated attributes, animation montages, and networked abilities such as equipping and shooting.","The most challenging part was ensuring proper replication of actor spawning, particularly for projectiles. Shots fired on the server needed to consistently appear and behave correctly for all clients. Solving this involved navigating issues with authority, ownership, and reliable network messaging through RPCs. Getting this to work reliably created a solid foundation for future gameplay systems to function smoothly in a multiplayer environment. Abilities, weapons, and effects are all built with replication support from the beginning.",,,,,,,
,,,,,,,,Genre,First-Person Co-Op Looter Shooter,,,"Implemented full multiplayer replication for player stats, animations, and GAS-driven abilities including equipping and shooting",Weapon System Design,"The weapon system in Lutr is designed to be modular, allowing players to assemble firearms from a wide range of interchangeable components. Although implementation is still ongoing, I have completed the foundational design. Weapons are built from parts such as barrels, stocks, magazines, and more, with each piece influencing specific stats like recoil, damage, fire rate, reload speed, and accuracy.","Each component includes randomized stat weights and may also carry a prefix modifier that adds further variation. These systems allow for meaningful build decisions and encourage players to experiment with different combinations. Over time, players will be able to collect, craft, and reforge components to push their builds in new directions. This structure supports both fast iteration and deep customization, ensuring that each weapon feels distinct and player-driven.",,,,,,,
,,,,,,,,Team Size,Solo,,,"Built the initial framework for a modular weapon system, supporting component-driven stat variation and randomized behavior",Cooperative Design Philosophy,"Although Lutr is a solo-developed project, it is being built with cooperative gameplay in mind. The structure of the game supports multiple players working together across dynamic encounters that include enemy waves, puzzle mechanics, and multi-phase challenges.","Inspired by MMO-style group content, the game includes plans for features such as revive systems, synchronized interaction mechanics, and scalable difficulty based on team composition. Core systems are being developed with replication and networked coordination in place to support these features. Even in its early state, Lutr is designed to grow into a co-op experience that rewards teamwork and timing without requiring perfect coordination. The goal is to create encounters that are engaging, reactive, and built to support varied playstyles across different group sizes.",,,,,,,
,,,,,,,,,,,,"Focused on delivering crisp weapon feel through early implementations of ADS transitions, weapon swap logic, and basic recoil control",,,,,,,,,,
,,,,,,,,,,,,"Developed early gameplay abilities like weapon equip/shoot with networked animation and sound sync, ensuring parity across clients",,,,,,,,,,
