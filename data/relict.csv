project-name,media-src,media-data-type,media-data-src,media-alt-text,cover-media,cover-alt-text,project-description,project-info-type,project-info-value,project-link-name,project-link,project-contributions,project-section,project-section-content-1,project-section-content-2,project-section-content-3,project-section-media-1,project-section-media-2,project-section-media-3,project-section-media-caption-1,project-section-media-caption-2,project-section-media-caption-3
Relict,http://i3.ytimg.com/vi/BEzC50Tub3I/hqdefault.jpg,video,https://www.youtube.com/embed/BEzC50Tub3I?si=GWKcZFuBMoHenoS1,Relict Gameplay Trailer,/media/Relict16x7.jpg,Relict Cover Graphic,"Relict is a third-person roguelike shooter built in Unity, combining fast-paced combat with a tarot-inspired power-up system. I served as Vision Holder, Code Lead, and System Administratorâ€”guiding the game from pitch to final build while leading a 15-person team through 9 sprints of agile development.",Dev Tools,"Unity, C#",Steam,https://store.steampowered.com/app/2929410/Relict/,Designed and implemented a third-person controller with full keyboard/gamepad support and custom rebinding system,Systems & Architecture,"Relict's gameplay is built around a dynamic system of tarot-themed powers that combine roguelike randomness with player agency. As the Vision Holder and Technical Lead, I designed the Grace System, a modular stat and ability framework inspired by Risk of Rain 2 and Hades. My goal was to create a persistent, upgradeable loop where players would earn, equip, and combine powers drawn from two tarot categories: Minor Arcana (stat boosts) and Major Arcana (active abilities).","To support this, I implemented stat tracking and ability slot systems in Unity, with dynamic cooldowns, buffs, and debuffs that responded to player loadouts. Powers could be acquired through Tarot Readings from the High Priestess or enemy drops, and were tied to a scalable inventory system that persisted across levels. Each upgrade or card choice had tangible gameplay effects, encouraging strategic decision-making and replayability.","This system became the core of Relict's progression and identity, giving players flexible builds, meaningful upgrades, and emergent interactions between power sets. It also laid a foundation for scalable content additions; new cards, stat effects, or powers could be integrated with minimal system rework.",,,,,,
,/media/RelictMedia1.jpg,image,/media/RelictMedia1.jpg,,,,,Team Tools,"ClickUp, GitHub",,,Built a modular Finite State Machine-based enemy AI framework with scalable behaviors and shared parent classes,Combat & AI,"Combat in Relict had to strike a balance between quick readability and roguelike intensity. I created a finite state machine (FSM) AI framework to support modular, reusable enemy behaviors. Enemies like the Crystal Thrall, Ember Wolves, and Ice Golem shared a parent class handling health, knockback, and targeting, while bosses like Justice and The Tower layered on unique attack patterns and hazard interactions.","I implemented key combat systems including hit detection, knockback, and projectile abilities like Silver Shot. Each attack was tuned for visual clarity and feedback, with SFX and VFX cues that made combat readable even in chaotic arenas. My FSM framework enabled easy addition of new enemy types with distinct behavior trees minimizing boilerplate code while supporting variety","Combined with a custom player controller, responsive stat systems, and tarot-driven loadouts, Relict's combat evolved into a reactive loop that rewarded movement, timing, and build experimentation. The modularity of the AI system also made it easy to create new challenges without reinventing the wheel each time.",,,,,,
,/media/RelictMedia2.jpg,image,/media/RelictMedia2.jpg,,,,,Genre,Roguelike Shooter,,,"Designed and implemented the tarot-inspired Grace System, enabling modular, stat-based power-ups and dynamic ability slots",Accessibilty & UX,"Relict was built to be accessible from the ground up. As the Programming Lead and a Technical Designer, I focused on creating a fully customizable input system and clear, readable interfaces while also working closely with our Accessibility Lead to implement features aligned with our team's internal Accessibility Guidelines. From font readability to motor accessibility, our shared goal was to make the game intuitive and playable for a wide audience, without sacrificing depth.","I developed a custom input and rebinding system that supported seamless switching between keyboard/mouse and gamepad. This included dynamically updating input prompts, ensuring menu parity across devices, and enabling full controller navigation throughout the UI. I also implemented scalable UI elements, clear fonts, high-contrast visuals, and menu structures that aligned with best practices for visual and cognitive accessibility. Working from the guidelines, I helped implement features like separate volume sliders for music and SFX, input sensitivity settings, and UI feedback that never relied solely on color or sound.","Together, these features ensured that Relict could be approached by players with a wide range of input needs and preferences. By building accessibility into the core systems and tools, we improved both usability and polish allowing every player to engage with the game on their terms, without compromising challenge or clarity.",,,,,,
,/media/RelictMedia3.jpg,image,/media/RelictMedia3.jpg,,,,,Team Size,15 Developers,,,"Developed full UI/UX framework, including Tarot card menus, HUD indicators, and controller-compatible navigation",,Implemented scalable combat systems tied to stat-driven tarot cards. Created several unique abilities and balanced them through internal QA and playtesting cycles.,,,,,,,,
,/media/RelictMedia4.jpg,image,/media/RelictMedia4.jpg,,,,,Time Frame,Sept 2023 - May 2024,,,"Maintained GitHub repository and Unity project structure, managed merges, branches, and weekly builds as System Administrator",,"I developed an extensible Finite State Machine architecture to handle enemy behaviors, including variants, bosses, and environment-reactive patterns. Modular structure enabled scalability and reuse.",,,,,,,,
,/media/RelictMedia5.jpg,image,/media/RelictMedia5.jpg,,,,,,,,,,,,,,,,,,,
,/media/RelictMedia6.jpg,image,/media/RelictMedia6.jpg,,,,,,,,,,,,,,,,,,,
,/media/RelictMedia7.jpg,image,/media/RelictMedia7.jpg,,,,,,,,,,,,,,,,,,,
,/media/RelictMedia8.jpg,image,/media/RelictMedia8.jpg,,,,,,,,,,,,,,,,,,,
